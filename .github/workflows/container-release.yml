name: CD container

on:
  release:
    types: [ created ]

concurrency:
  group: container/${{ github.event.release.tag_name }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

jobs:
  build-and-push-container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download artifact
        run: gh release download ${{ github.event.release.tag_name }} --pattern "*+linux+x86-64.tar.xz" && ls
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Unpack downloaded artifact
        run: tar xJf deliverymetrics-${{ github.event.release.tag_name }}+linux+x86-64.tar.xz && ls

      - name: log in to github pkgs
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=raw,value=latest
            type=sha

      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - name: docker/buildx
        run: |
          for x in $(echo "${{ steps.meta.outputs.tags}}" | tr '\n' ' ');
            do tags="$tags --tag $x";
          done
          docker buildx build \
            --push \
            $tags \
            --platform linux/amd64,linux/arm64 \
            --file Dockerfile \
            .
